version: 2.1

jobs:
  test:
    docker:
      - image: cimg/php:8.2.5
      - name: circle_test
        image: cimg/mysql:8.0
        command: mysqld --default-authentication-plugin=mysql_native_password
    environment:
      - APP_DEBUG: true
      - APP_ENV: testing
      - APP_KEY: base64:rZO/6rNt/Vdk2Imcxyg/UA9a0+h6idMNLvJQlKkP10Y=
      - DB_CONNECTION: circleci

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1

      - run:
          name: Install PHP Extensions
          command: sudo docker-php-ext-install pdo_mysql

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "backend/composer.json" }}
            - v1-dependencies-

      - run:
          name: composer install
          working_directory: backend
          command: composer install -n --prefer-dist

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "backend/composer.json" }}
          
      - run:
          name: base64 decode env file
          command: |
            echo "$ENV_FILE" | base64 -d > ./backend/.env.testing

      - run:
          name: Wait for db
          command: dockerize -wait tcp\://circle_test:3306 -timeout 1m

      - run:
          name: Migration
          working_directory: backend
          command: sudo php artisan migrate --env=testing

      - run:
          name: Run tests
          working_directory: backend
          command: sudo php artisan test

  deploy:
    machine:
      image: ubuntu-2204:2023.04.2
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: f8:14:34:f4:7c:b4:ad:03:0b:82:a6:82:d1:7c:29:c3
      - run: ssh ${USER_NAME}@${HOST_NAME} 'cd /home/ec2-user/Rese/ && git pull --rebase'

workflows:
  version: 2.1
  test_and_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: main
